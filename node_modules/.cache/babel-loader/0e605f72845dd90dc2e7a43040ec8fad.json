{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\xpert-shop\\\\src\\\\containers\\\\registerForm\\\\registerForm.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../ui/input/input\";\nimport \"./registerForm.css\";\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      registerForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Emri i Plotë\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Email\"\n          },\n          value: \"\"\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Fjalëkalimi\"\n          },\n          value: \"\"\n        },\n        passwordRepeat: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Fjalëkalimi sërish\"\n          },\n          value: \"\"\n        },\n        phoneNumber: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"tel\",\n            placeholder: \"+35569*******\",\n            pattern: \"[+]{1}[0-9]{3}[0-9]{9}\"\n          },\n          value: \"\"\n        },\n        business: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"individ\",\n              displayValue: \"Individ\"\n            }, {\n              value: \"biznes\",\n              displayValue: \"Biznes\"\n            }]\n          },\n          value: \"\"\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.registerForm) {\n        formData[formElementIdentifier] = this.state.registerForm[formElementIdentifier].value;\n      }\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedRegisterForm = { ...this.state.registerForm\n      };\n      const updatedRegisterFormElement = { ...updatedRegisterForm[inputIdentifier]\n      };\n      updatedRegisterFormElement.value = event.target.value;\n      updatedRegisterForm[inputIdentifier] = updatedRegisterFormElement;\n      this.setState({\n        registerForm: updatedRegisterForm\n      });\n    };\n  }\n\n  render() {\n    const registerFormElementsArray = [];\n\n    for (let key in this.state.registerForm) {\n      registerFormElementsArray.push({\n        id: key,\n        config: this.state.registerForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.orderHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelTitle\",\n        children: \"Rregjistrohuni p\\xEBr t\\xEB vazhduar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelSubtitle\",\n        children: \"B\\xEBhu pjes\\xEB e Xpert eShop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), registerFormElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        changed: event => this.inputChangedHandler(event, formElement.id)\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelNotify\",\n        children: \"Fushat e sh\\xEBnuara me * jan\\xEB t\\xEB detyrueshme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelButtons\",\n        children: \"DUKE U RREGJISTRUAR, JU KENI R\\xCBN\\xCB DAKORD ME TERMAT E P\\xCBRDORIMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        className: \"loginButton\",\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: \"RREGJISTROHU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelButtons\",\n        children: \"APO JENI TASHM\\xCB T\\xCB RREGJISTRUAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"loginButton\",\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: \"KYCU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: form\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Users/User/Desktop/xpert-shop/src/containers/registerForm/registerForm.js"],"names":["React","Component","Input","RegisterForm","state","registerForm","name","elementType","elementConfig","type","placeholder","value","email","password","passwordRepeat","phoneNumber","pattern","business","options","displayValue","loading","orderHandler","event","preventDefault","setState","formData","formElementIdentifier","inputChangedHandler","inputIdentifier","updatedRegisterForm","updatedRegisterFormElement","target","render","registerFormElementsArray","key","push","id","config","form","map","formElement","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCG,KADmC,GAC3B;AACNC,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAE;AACJC,UAAAA,WAAW,EAAE,OADT;AAEJC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE,MADO;AAEbC,YAAAA,WAAW,EAAE;AAFA,WAFX;AAMJC,UAAAA,KAAK,EAAE;AANH,SADM;AASZC,QAAAA,KAAK,EAAE;AACLL,UAAAA,WAAW,EAAE,OADR;AAELC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE,OADO;AAEbC,YAAAA,WAAW,EAAE;AAFA,WAFV;AAMLC,UAAAA,KAAK,EAAE;AANF,SATK;AAiBZE,QAAAA,QAAQ,EAAE;AACRN,UAAAA,WAAW,EAAE,OADL;AAERC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE,UADO;AAEbC,YAAAA,WAAW,EAAE;AAFA,WAFP;AAMRC,UAAAA,KAAK,EAAE;AANC,SAjBE;AAyBZG,QAAAA,cAAc,EAAE;AACdP,UAAAA,WAAW,EAAE,OADC;AAEdC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE,UADO;AAEbC,YAAAA,WAAW,EAAE;AAFA,WAFD;AAMdC,UAAAA,KAAK,EAAE;AANO,SAzBJ;AAiCZI,QAAAA,WAAW,EAAE;AACXR,UAAAA,WAAW,EAAE,OADF;AAEXC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE,KADO;AAEbC,YAAAA,WAAW,EAAE,eAFA;AAGbM,YAAAA,OAAO,EAAE;AAHI,WAFJ;AAOXL,UAAAA,KAAK,EAAE;AAPI,SAjCD;AA0CZM,QAAAA,QAAQ,EAAE;AACRV,UAAAA,WAAW,EAAE,QADL;AAERC,UAAAA,aAAa,EAAE;AACbU,YAAAA,OAAO,EAAE,CACP;AAAEP,cAAAA,KAAK,EAAE,SAAT;AAAoBQ,cAAAA,YAAY,EAAE;AAAlC,aADO,EAEP;AAAER,cAAAA,KAAK,EAAE,QAAT;AAAmBQ,cAAAA,YAAY,EAAE;AAAjC,aAFO;AADI,WAFP;AAQRR,UAAAA,KAAK,EAAE;AARC;AA1CE,OADR;AAsDNS,MAAAA,OAAO,EAAE;AAtDH,KAD2B;;AAAA,SA0DnCC,YA1DmC,GA0DnBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMK,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAIC,qBAAT,IAAkC,KAAKtB,KAAL,CAAWC,YAA7C,EAA2D;AACzDoB,QAAAA,QAAQ,CAACC,qBAAD,CAAR,GAAkC,KAAKtB,KAAL,CAAWC,YAAX,CAChCqB,qBADgC,EAEhCf,KAFF;AAGD;AACF,KAnEkC;;AAAA,SAqEnCgB,mBArEmC,GAqEb,CAACL,KAAD,EAAQM,eAAR,KAA4B;AAChD,YAAMC,mBAAmB,GAAG,EAC1B,GAAG,KAAKzB,KAAL,CAAWC;AADY,OAA5B;AAGA,YAAMyB,0BAA0B,GAAG,EACjC,GAAGD,mBAAmB,CAACD,eAAD;AADW,OAAnC;AAGAE,MAAAA,0BAA0B,CAACnB,KAA3B,GAAmCW,KAAK,CAACS,MAAN,CAAapB,KAAhD;AACAkB,MAAAA,mBAAmB,CAACD,eAAD,CAAnB,GAAuCE,0BAAvC;AACA,WAAKN,QAAL,CAAc;AACZnB,QAAAA,YAAY,EAAEwB;AADF,OAAd;AAGD,KAjFkC;AAAA;;AAmFnCG,EAAAA,MAAM,GAAG;AACP,UAAMC,yBAAyB,GAAG,EAAlC;;AACA,SAAK,IAAIC,GAAT,IAAgB,KAAK9B,KAAL,CAAWC,YAA3B,EAAyC;AACvC4B,MAAAA,yBAAyB,CAACE,IAA1B,CAA+B;AAC7BC,QAAAA,EAAE,EAAEF,GADyB;AAE7BG,QAAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWC,YAAX,CAAwB6B,GAAxB;AAFqB,OAA/B;AAID;;AAED,QAAII,IAAI,gBACN;AAAM,MAAA,QAAQ,EAAE,KAAKjB,YAArB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGY,yBAAyB,CAACM,GAA1B,CAA+BC,WAAD,iBAC7B,QAAC,KAAD;AAEE,QAAA,WAAW,EAAEA,WAAW,CAACH,MAAZ,CAAmB9B,WAFlC;AAGE,QAAA,aAAa,EAAEiC,WAAW,CAACH,MAAZ,CAAmB7B,aAHpC;AAIE,QAAA,KAAK,EAAEgC,WAAW,CAACH,MAAZ,CAAmB1B,KAJ5B;AAKE,QAAA,OAAO,EAAGW,KAAD,IAAW,KAAKK,mBAAL,CAAyBL,KAAzB,EAAgCkB,WAAW,CAACJ,EAA5C;AALtB,SACOI,WAAW,CAACJ,EADnB;AAAA;AAAA;AAAA;AAAA,cADD,CAHH,eAYE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAkBE;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,KAAK,EAAE;AAAEK,UAAAA,YAAY,EAAE;AAAhB,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0BE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAoC,QAAA,KAAK,EAAE;AAAEA,UAAAA,YAAY,EAAE;AAAhB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAgCA,wBAAO;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA7HkC;;AAgIrC,eAAenC,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Input from \"../ui/input/input\";\r\nimport \"./registerForm.css\";\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    registerForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Emri i Plotë\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Email\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Fjalëkalimi\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      passwordRepeat: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Fjalëkalimi sërish\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      phoneNumber: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"tel\",\r\n          placeholder: \"+35569*******\",\r\n          pattern: \"[+]{1}[0-9]{3}[0-9]{9}\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      business: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"individ\", displayValue: \"Individ\" },\r\n            { value: \"biznes\", displayValue: \"Biznes\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n    },\r\n    loading: false,\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.registerForm) {\r\n      formData[formElementIdentifier] = this.state.registerForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n  };\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedRegisterForm = {\r\n      ...this.state.registerForm,\r\n    };\r\n    const updatedRegisterFormElement = {\r\n      ...updatedRegisterForm[inputIdentifier],\r\n    };\r\n    updatedRegisterFormElement.value = event.target.value;\r\n    updatedRegisterForm[inputIdentifier] = updatedRegisterFormElement;\r\n    this.setState({\r\n      registerForm: updatedRegisterForm,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const registerFormElementsArray = [];\r\n    for (let key in this.state.registerForm) {\r\n      registerFormElementsArray.push({\r\n        id: key,\r\n        config: this.state.registerForm[key],\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        <label className=\"labelTitle\">Rregjistrohuni për të vazhduar</label>\r\n        <label className=\"labelSubtitle\">Bëhu pjesë e Xpert eShop</label>\r\n        {registerFormElementsArray.map((formElement) => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <label className=\"labelNotify\">\r\n          Fushat e shënuara me * janë të detyrueshme\r\n        </label>\r\n        <label className=\"labelButtons\">\r\n          DUKE U RREGJISTRUAR, JU KENI RËNË DAKORD ME TERMAT E PËRDORIMIT\r\n        </label>\r\n        <a\r\n          href=\"/register\"\r\n          className=\"loginButton\"\r\n          style={{ marginBottom: \"15px\" }}\r\n        >\r\n          RREGJISTROHU\r\n        </a>\r\n        <label className=\"labelButtons\">APO JENI TASHMË TË RREGJISTRUAR</label>\r\n        <a href=\"/\" className=\"loginButton\" style={{ marginBottom: \"15px\" }}>\r\n          KYCU\r\n        </a>\r\n      </form>\r\n    );\r\n    return <div>{form}</div>;\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}