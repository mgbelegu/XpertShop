{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\xpert-shop\\\\src\\\\containers\\\\home\\\\home.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Aux from \"../hoc/Auxiliary\";\nimport Product from \"../../components/product/product\";\nimport \"./home.css\";\nimport Spinner from \"../ui/spinner/spinner\";\nimport * as actions from \"../store/actions/index\";\n\nclass Store extends Component {\n  componentDidMount() {\n    this.props.onFetchProducts();\n  }\n\n  render() {\n    let productList = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }, this);\n\n    if (!this.props.loading) {\n      productList = this.props.products.map((productItem, i) => /*#__PURE__*/_jsxDEV(Product, {\n        productImage: productItem.img,\n        productTitle: productItem.title,\n        productDescription: productItem.description,\n        productPrice: productItem.price\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"storeHeaderImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: productList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchProducts: () => dispatch(actions.fetchProducts())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","map":{"version":3,"sources":["C:/Users/User/Desktop/xpert-shop/src/containers/home/home.js"],"names":["React","Component","connect","Aux","Product","Spinner","actions","Store","componentDidMount","props","onFetchProducts","render","productList","loading","products","map","productItem","i","img","title","description","price","mapStateToProps","state","mapDispatchToProps","dispatch","fetchProducts"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC5BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAlB;;AAEA,QAAI,CAAC,KAAKH,KAAL,CAAWI,OAAhB,EAAyB;AACvBD,MAAAA,WAAW,GAAG,KAAKH,KAAL,CAAWK,QAAX,CAAoBC,GAApB,CAAwB,CAACC,WAAD,EAAcC,CAAd,kBACpC,QAAC,OAAD;AAEE,QAAA,YAAY,EAAED,WAAW,CAACE,GAF5B;AAGE,QAAA,YAAY,EAAEF,WAAW,CAACG,KAH5B;AAIE,QAAA,kBAAkB,EAAEH,WAAW,CAACI,WAJlC;AAKE,QAAA,YAAY,EAAEJ,WAAW,CAACK;AAL5B,SACOJ,CADP;AAAA;AAAA;AAAA;AAAA,cADY,CAAd;AASD;;AAED,wBACE,QAAC,GAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BL;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1B2B;;AA6B9B,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,QAAQ,EAAES,KAAK,CAACT,QADX;AAELD,IAAAA,OAAO,EAAEU,KAAK,CAACV;AAFV,GAAP;AAID,CALD;;AAOA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLf,IAAAA,eAAe,EAAE,MAAMe,QAAQ,CAACnB,OAAO,CAACoB,aAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAexB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Aux from \"../hoc/Auxiliary\";\r\nimport Product from \"../../components/product/product\";\r\nimport \"./home.css\";\r\nimport Spinner from \"../ui/spinner/spinner\";\r\nimport * as actions from \"../store/actions/index\";\r\n\r\nclass Store extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchProducts();\r\n  }\r\n\r\n  render() {\r\n    let productList = <Spinner />;\r\n\r\n    if (!this.props.loading) {\r\n      productList = this.props.products.map((productItem, i) => (\r\n        <Product\r\n          key={i}\r\n          productImage={productItem.img}\r\n          productTitle={productItem.title}\r\n          productDescription={productItem.description}\r\n          productPrice={productItem.price}\r\n        />\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <div className=\"storeHeaderImage\"></div>\r\n        <div className=\"products\">{productList}</div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products,\r\n    loading: state.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchProducts: () => dispatch(actions.fetchProducts()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);\r\n"]},"metadata":{},"sourceType":"module"}